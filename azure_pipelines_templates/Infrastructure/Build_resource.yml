parameters:
  - name: directory
    type: string 
    default: '$(System.DefaultWorkingDirectory)'

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
    displayName: 'Terraform : init'
    inputs:
      provider: aws
      command: init
      workingDirectory: '${{ parameters.directory }}'
      backendServiceAWS: 'Iac_builder_terraform'
      backendAWSBucketName: backend-terraform-simple
      backendAWSKey: prod-state

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
    displayName: 'Terraform : validate'
    condition: succeeded()
    inputs:
      provider: aws
      command: validate
      workingDirectory: '${{ parameters.directory }}'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
    displayName: 'Terraform : plan'
    condition: succeeded()
    inputs:
      provider: aws
      command: plan
      commandOptions: '-out=tfplan'
      workingDirectory: '${{ parameters.directory }}'
      environmentServiceNameAWS: 'Iac_builder_terraform'
      
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
    displayName: 'Terraform : apply'
    condition: succeeded()
    inputs:
      provider: aws
      command: apply
      commandOptions: '-auto-approve'
      workingDirectory: '${{ parameters.directory }}'
      environmentServiceNameAWS: 'Iac_builder_terraform'
