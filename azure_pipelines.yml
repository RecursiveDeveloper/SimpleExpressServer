trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
 - name: terraformDirectory
   value: 'Iac/Terraform'

stages:
  - stage: Deploy_Infrastructure
    displayName: 'Deploying AWS resources'
    condition: and(always(), contains(variables['build.sourceBranch'], 'refs/heads/main'))
    jobs:
      - job: Install_Check_Terraform
        steps:
          - template: 'azure_pipelines_templates/Infrastructure/Install_terraform.yml'

      - job: Deploy_Resources
        dependsOn: Install_Check_Terraform
        condition: succeeded()
        steps:
          - template: 'azure_pipelines_templates/Infrastructure/Build_resource.yml'
            parameters:
              directory: '${{ variables.terraformDirectory }}'
      
      - job: waitForValidation
        displayName: 'Wait for external validation'
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        dependsOn: Deploy_Resources
        condition: succeeded()
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please validate if you want to destroy the deployed infrastructured'
              onTimeout: 'reject'

      - job: Destroy_Resources
        dependsOn: 
          - waitForValidation
          - Deploy_Resources
        condition: |
          or
          (
            eq(dependencies.waitForValidation.result, 'Succeeded'),
            eq(dependencies.Deploy_Resources.result, 'failed')
          )
        steps:
          - template: 'azure_pipelines_templates/Infrastructure/Destroy_resource.yml'
            parameters:
              directory: '${{ variables.terraformDirectory }}'
